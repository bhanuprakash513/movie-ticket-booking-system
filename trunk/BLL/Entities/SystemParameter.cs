//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Data.Objects;
using System.Linq;
using Microsoft.Practices.EnterpriseLibrary.Caching;
using MovieBooking.DAL;
using MovieBooking.Model.Entities;

namespace MovieBooking.BLL.Entities
{
    public interface ISystemParameter : IDisposable
    {
        IEnumerable<SystemParameter> GetSystemParameters(string category);
    }

    public partial class SystemParameter : mb_SystemParameter, ISystemParameter, IDisposable
    {
        private MovieBookingEntitiesContext context = null;

        #region dispose
        private bool disposed = false;

        protected virtual void Dispose(bool disposing)
        {
            if (!this.disposed)
            {
                if (disposing)
                {
                    context.Dispose();
                }
            }
            this.disposed = true;
        }

        public void Dispose()
        {
            Dispose(true);
            GC.SuppressFinalize(this);
        }
        #endregion

        public IEnumerable<SystemParameter> GetSystemParameters(string category)
        {
            ICacheManager cache = CacheFactory.GetCacheManager();
            string cacheName = string.Format("SystemParam-{0}", category);
            List<SystemParameter> roParams = null;
            context = new MovieBookingEntitiesContext();

            if (cache.Contains(cacheName))
            {
                roParams = cache.GetData(cacheName) as List<SystemParameter>;
            }
            else
            {
                roParams = context.mb_SystemParameter.Where(sp => sp.Category == category).Select(p => new SystemParameter()
                                {ItemName = p.ItemName, ItemValue = p.ItemValue}).ToList();
                          
                /*
                roParams = context.mb_SystemParameterGetSystemParams(category);
                    foreach (mb_SystemParameter ps in ctx.GetSystemParams(category))
                    {
                        roParams.Add(new mb_SystemParameter()
                        {
                            Active = ps.Active,
                            Category = ps.Category,
                            ID = ps.ID,
                            ItemName = ps.ItemName,
                            ItemValue = ps.ItemValue,
                            Remarks = ps.Remarks,
                            SortOrder = ps.SortOrder
                        });
                    }
                */
                cache.Add(cacheName, roParams);
            }
            return roParams.AsEnumerable();
        }
    }
}
